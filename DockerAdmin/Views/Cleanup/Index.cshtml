@model DockerAdmin.ViewModels.PruneResultViewModel
@{
    ViewData["Title"] = "Clean-up";
}

<h3 class="display-6">Clean-up and free space</h3>

<!-- Prune Images -->
<div class="card" style="margin: 20px 0">
  <h5 class="card-header">Prune images</h5>
  <div class="card-body">
    <p class="card-text">
        This command allows you to clean up unused images. Only cleans up dangling images. 
        A dangling image is one that is not tagged and is not referenced by any container.
    </p>
    <a class="btn btn-outline-danger btn-sm" asp-action="Prune" asp-route-option="@PruneOption.Image"> 
        <i class="bi bi-trash"></i> Proceed to Prune images
    </a>
    @if(!string.IsNullOrWhiteSpace(Model.Images))
    {
        <pre class="cleanup-message">@Model.Images</pre>
    }
  </div>
</div>

<!-- Prune Containers -->
<div class="card" style="margin: 20px 0">
  <h5 class="card-header">Prune containers</h5>
  <div class="card-body">
    <p class="card-text">
        When you stop a container, it is not automatically removed.
        You may be surprised how many containers exist, especially on a development system! 
        A stopped container’s writable layers still take up disk space.
    </p>
    <a class="btn btn-outline-danger btn-sm" asp-action="Prune" asp-route-option="@PruneOption.Container"> 
        <i class="bi bi-trash"></i> Proceed to Prune containers
    </a>
    @if(!string.IsNullOrWhiteSpace(Model.Containers))
    {
        <pre class="cleanup-message">@Model.Containers</pre>
    }
  </div>
</div>

<!-- Prune Volumes -->
<div class="card" style="margin: 20px 0">
  <h5 class="card-header">Prune volumes</h5>
  <div class="card-body">
    <p class="card-text">
        Volumes can be used by one or more containers, and take up space on the Docker host. 
        Volumes are never removed automatically, because to do so could destroy data.
    </p>
    <a class="btn btn-outline-danger btn-sm" asp-action="Prune" asp-route-option="@PruneOption.Volume"> 
        <i class="bi bi-trash"></i> Proceed to Prune volumes
    </a>
    @if(!string.IsNullOrWhiteSpace(Model.Volumes))
    {
        <pre class="cleanup-message">@Model.Volumes</pre>
    }
  </div>
</div>

<!-- Prune Network -->
<div class="card" style="margin: 20px 0">
  <h5 class="card-header">Prune network</h5>
  <div class="card-body">
    <p class="card-text">
        Docker networks don’t take up much disk space, but they do create iptables rules, 
        bridge network devices, and routing table entries.
    </p>
    <a class="btn btn-outline-danger btn-sm" asp-action="Prune" asp-route-option="@PruneOption.Network">
        <i class="bi bi-trash"></i> Proceed to Prune network
    </a>
    @if(!string.IsNullOrWhiteSpace(Model.Networks))
    {
        <pre class="cleanup-message">@Model.Networks</pre>
    }
  </div>
</div>

<!-- Prune System -->
<div class="card" style="margin: 20px 0">
  <h5 class="card-header">Prune everything</h5>
  <div class="card-body">
    <p class="card-text">
        This is a command that prunes images, containers, and networks
    </p>
    <a class="btn btn-outline-danger btn-sm" asp-action="Prune" asp-route-option="@PruneOption.System">  
        <i class="bi bi-trash"></i> Proceed to Prune everything
    </a>
    @if(!string.IsNullOrWhiteSpace(Model.System))
    {
        <pre class="cleanup-message">@Model.System</pre>
    }
  </div>
</div>
